sum.ba <- data.frame(x = tree.id, y = states, z = NA )
sum.ba
db$id
# The combined spp files are not done yet, so remove them from file list
tree.id <- db$spp_code
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
spp_id <- rep(tree.id, length(states))
spp_id
state_df <- rep(states, length(tree.id))
state_df
cbind(spp_id, state_df)
?rep
?each
?seq
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
install.packages("rasterVis")
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
### Total BA by state - will want to get a script running and let this calculate on its own
# then create a csv for it.
db <- read.csv("data/summary_table_all.csv")
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
library(ggthemes)
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
install.package("rasterVis")
install.packages("rasterVis")
install.packages("ggthemes")
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
usa <- readOGR("data/shapefiles", "states") # get usa shapefile
white.oak <- raster("data/s802.img")
red.oak <- raster("data/s833.img")
usa <- spTransform(usa, CRS(proj4string(white.oak))) # transform shapefile to project with raster
contig.usa <- subset(usa, STATE_NAME != "Hawaii" & STATE_NAME != "Alaska") # contig. usa shapefile
wisconsin <- subset(usa, STATE_NAME == "Wisconsin")
mn.wi <- subset(usa, STATE_NAME == "Wisconsin" | STATE_NAME == "Minnesota")
states <- as.character(unique(contig.usa$STATE_NAME))
arizona <- subset(contig.usa, STATE_NAME == "Arizona")
### Total BA by state - will want to get a script running and let this calculate on its own
# then create a csv for it.
db <- read.csv("data/summary_table_all.csv")
db$id <- paste0("s", db$spp_code, ".img")
genera <- unique(db$genus_name)
spp.id <- db$id
file.list <- list.files(path = "./data/", pattern = ".img", full.names = T)
# The combined spp files are not done yet, so remove them from file list
spp.id <- as.character(spp.id)
index <- grep(paste(spp.id, collapse = "|"), split1)
split1 <- unlist(strsplit(file.list, "a/"))
split1 <- split1[seq(from = 2, to = length(split1), by = 2)]
index <- grep(paste(spp.id, collapse = "|"), split1)
file.list[index]
list.rasters <- lapply(file.list[index], raster)
# Make a list of state shape files
state.shapes <- lapply(states, function(x) {subset(contig.usa, STATE_NAME == x)})
names(state.shapes) <- states
# spp_id <- rep(tree.id, length(states))
# state_df <- rep(states, length(tree.id))
# cbind(spp_id, state_df)
sum.ba <- data.frame(x = tree.id, y = states, z = NA )
sum.ba$x <- as.character(sum.ba$x)
# spp_id <- rep(tree.id, length(states))
# state_df <- rep(states, length(tree.id))
# cbind(spp_id, state_df)
sum.ba <- data.frame(x = tree.id, y = states, z = NA )
# spp_id <- rep(tree.id, length(states))
# state_df <- rep(states, length(tree.id))
# cbind(spp_id, state_df)
sum.ba <- data.frame(x = id, y = states, z = NA )
# spp_id <- rep(tree.id, length(states))
# state_df <- rep(states, length(tree.id))
# cbind(spp_id, state_df)
sum.ba <- data.frame(x = spp.id, y = states, z = NA )
?rep
rep(1:4, 2)
rep(1:4, each = 2)
spp.id
spp.id <- db$spp_code
file.list <- list.files(path = "./data/", pattern = ".img", full.names = T)
# The combined spp files are not done yet, so remove them from file list
spp.id <- as.character(spp.id)
split1 <- unlist(strsplit(file.list, "a/"))
split1 <- split1[seq(from = 2, to = length(split1), by = 2)]
index <- grep(paste(spp.id, collapse = "|"), split1)
file.list[index]
# Make a list of state shape files
state.shapes <- lapply(states, function(x) {subset(contig.usa, STATE_NAME == x)})
names(state.shapes) <- states
spp.id1 <- rep(spp.id, each = length(states))
spp.id1
spp.id.df <- rep(spp.id, each = length(states))
state.df <- rep(states, length(tree.id))
state.df <- rep(states, length(spp.id))
state.df
# cbind(spp_id, state_df)
sum.ba <- data.frame(x = rep(spp.id, each = length(states)),
y = rep(states, length(spp.id)),
z = NA )
sum.ba$x <- as.character(sum.ba$x)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
list.rasters[[1]]
test <- list.rasters[[1]]
test
test@filelist.rasters[[2]]
list.rasters[[2]]
list.rasters[[3]]
spp.id
test@z
test@history
test
names(test)
spp.id <- paste0("s", spp.id)
spp.id
names(test) %in% spp.id
which(names(test) %in% spp.id)
file.list <- list.files(path = "./data/", pattern = ".img", full.names = T)
# The combined spp files are not done yet, so remove them from file list
spp.id <- as.character(spp.id)
split1 <- unlist(strsplit(file.list, "a/"))
split1 <- split1[seq(from = 2, to = length(split1), by = 2)]
index <- grep(paste(spp.id, collapse = "|"), split1)
file.list[index]
list.rasters <- lapply(file.list[index], raster)
# Make a list of state shape files
state.shapes <-
lapply(states, function(x) {
subset(contig.usa, STATE_NAME == x)
})
names(state.shapes) <- states
sum.ba <- data.frame(
x = rep(spp.id, each = length(states)),
y = rep(states, length(spp.id)),
z = NA
)
sum.ba$x <- as.character(sum.ba$x)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
head(sum.ba)
states <- c("Washington", "Montana")
StateStats <- function(rasterfile) {
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(test)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
raster.subset <- list.rasters[1:2]
raster.subset
test <- lapply(raster.subset, StateStats)
StateStats <- function(rasterfile) {
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
states <- c("Rhode Island", "Delaware")
StateStats <- function(rasterfile) {
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
sum.ba <- data.frame(
x = rep(spp.id, each = length(states)),
y = rep(states, length(spp.id)),
z = NA
)
sum.ba$x <- as.character(sum.ba$x)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
StateStats <- function(rasterfile) {
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
raster.subset <- list.rasters[1:2]
test <- lapply(raster.subset, StateStats)
test
test <- sapply(raster.subset, StateStats)
test
?apply
?tapply
?lapply
test <- lapply(raster.subset, StateStats)
test[[1]]
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(spp.id, length(states)),
y = states,
z = NA
)
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
test <- lapply(raster.subset, StateStats)
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(spp.id, length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
raster.subset <- list.rasters[1:2]
test <- lapply(raster.subset, StateStats)
test
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(names(rasterfile), length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
raster.subset <- list.rasters[1:2]
test <- lapply(raster.subset, StateStats)
test
v <- unlist(test)
v
?ldply
library(plyr)
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
library(ggthemes)
v <- ldply(test, data.frame)
v
library(doParallel)
?for each
?foreach
StateStatsParallel <- function(rasterfile) {
sum.ba <- data.frame(x = rep(names(rasterfile), length(states)),
y = states,
z = NA)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
sum.ba <- foreach (i = states, .combine = rbind)  %dopar% {
res <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
c(names(rasterfile), state, res)
}
return(sum.ba)
}
test <- lapply(raster.subset, StateStatsParallel)
detectCores()
detectCores() - 1
registerDoParallel(detectCores() - 1)
StateStatsParallel <- function(rasterfile) {
sum.ba <- data.frame(x = rep(names(rasterfile), length(states)),
y = states,
z = NA)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
sum.ba <- foreach (i = states, .combine = rbind)  %dopar% {
res <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
c(names(rasterfile), states, res)
}
return(sum.ba)
}
registerDoParallel(detectCores() - 1)
test <- lapply(raster.subset, StateStatsParallel)
library(raster)
test <- lapply(raster.subset, StateStatsParallel)
?foreach
StateStatsParallel <- function(rasterfile) {
sum.ba <- data.frame(x = rep(names(rasterfile), length(states)),
y = states,
z = NA)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
sum.ba <- foreach (i = states, .combine = rbind, .packages = "raster")  %dopar% {
res <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
c(names(rasterfile), states, res)
}
return(sum.ba)
}
registerDoParallel(detectCores() - 1)
test <- lapply(raster.subset, StateStatsParallel)
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(names(rasterfile), length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(sum.ba)
}
b <- list.rasters[1]
test <- lapply(states, function(x) {cellStats(mask(crop(b, extent(x)),
x), stat = "sum")})
StatesFun <- function(list.states) {
cellStats(mask(crop(rasterfile, extent(list.states),
list.states), stat = "sum"))
}
StatesFun(state.shapes)
StatesFun <- function(list.states) {
cellStats(mask(crop(b, extent(list.states),
list.states), stat = "sum"))
}
StatesFun(state.shapes)
?write.csv
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(names(rasterfile), length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
test <- lapply(states, function(x) {})
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
write.csv(sum.ba, paste0("data/", names(rasterfile), "states_tot_ba.csv"))
return(sum.ba)
}
tot.ba <- lapply(raster.subset, StateStats)
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(names(rasterfile), length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
test <- lapply(states, function(x) {})
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
write.csv(sum.ba, paste0("data/", names(rasterfile), "states_tot_ba.csv"))
return(sum.ba)
}
states <- as.character(unique(contig.usa$STATE_NAME))
# Make a list of state shape files
state.shapes <-
lapply(states, function(x) {
subset(contig.usa, STATE_NAME == x)
})
names(state.shapes) <- states
StateStats <- function(rasterfile) {
sum.ba <- data.frame(
x = rep(names(rasterfile), length(states)),
y = states,
z = NA
)
colnames(sum.ba) <- c("spp.id", "state", "tot.ba")
print(names(rasterfile))
test <- lapply(states, function(x) {})
for (i in states) {
sum.ba$tot.ba[sum.ba$state == i & sum.ba$spp.id == names(rasterfile)] <-
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
write.csv(sum.ba, paste0("data/", names(rasterfile), "states_tot_ba.csv"))
return(sum.ba)
}
