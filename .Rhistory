install.packages("GISTools")
library(GISTools)
data(georgia)
appling <- georgia.polys[[1]]
georgia.polys[[1]]
plot(appling, asp = 1, type = "n", xlab = "Easting", ylab = "Northing")
polygon(appling, density = 14, angle = 135)
?polygon
mat = SpatialPixelsDataFrame(points = meuse.grid[c("x", "y")], data = meuse.grid)
data(meuse.grid)
mat = SpatialPixelsDataFrame(points = meuse.grid[c("x", "y")], data = meuse.grid)
par(mfrow = c(1, 2))
par(mar = c(0, 0, 0, 0))
image(mat, "dist")
library(RColorBrewer)
image(mat, "dist", col = greenpal)
image(mat, "dist", col = "greenpal")
?RColorBrewer
greenpal <- brewer.pal(7, "Greens")
image(mat, "dist", col = greenpal)
image(mat, "dist")
image(mat, "dist", col = greenpal)
head(meuse.grid)
contour(mat, "dist")
data(newhaven)
ls()
data(newhaven)
ls()
plot(roads)
plot(roads)
class(roads)
class(blocks)
class(tracts)
class(breach)
head(blocks)
head(data.frame(blocks))
head(breach)
plot(blocks)
plot(roads)
plot(blocks)
plot(roads, add = T, col = "red")
plot(breach, add = T, col = "blue")
map.scale(534750, miles2ft(2), "Miles", 4, 0.5)
map.scale(534750, 152000, miles2ft(2), "Miles", 4, 0.5)
map.scale(534750, 152000, miles2ft(2), "Miles", 4, 0.5)
north.arrow(534750, 154000, miles2ft(0.25), col = "lightgreen")
north.arrow(534750, 155000, miles2ft(0.25), col = "lightgreen")
north.arrow(534750, 156000, miles2ft(0.25), col = "lightgreen")
north.arrow(534750, 159000, miles2ft(0.25), col = "lightgreen")
plot(blocks)
plot(roads, add = T, col = "red")
plot(breach, add = T, col = "blue")
map.scale(534750, 152000, miles2ft(2), "Miles", 4, 0.5)
north.arrow(534750, 159000, miles2ft(0.25), col = "lightgreen")
map.scale(534750, 152000, miles2ft(3), "Miles", 4, 0.5)
plot(blocks)
plot(roads, add = T, col = "red")
plot(breach, add = T, col = "blue")
map.scale(534750, 152000, miles2ft(3), "Miles", 4, 0.5)
north.arrow(534750, 159000, miles2ft(0.25), col = "lightgreen")
plot(blocks)
plot(roads, add = T, col = "red")
plot(breach, add = T, col = "blue")
map.scale(534750, 152000, miles2ft(3), "Miles", 6, 0.5)
north.arrow(534750, 159000, miles2ft(0.25), col = "lightgreen")
# Calculate mean BA by state and nationwide
# Total BA by state
# Best way to plot multiple raster files
# Database linking file name to species name
db <- read.csv("data/summary_table_all.csv")
input <- 802
test <- raster(paste("data/s", input, ".img"))
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
library(ggthemes)
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
test <- raster(paste("data/s", input, ".img"))
paste("data/s", input, ".img"
)
?paste
test <- raster(paste("data/s", input, ".img"), collapse = T)
test <- raster(paste("data/s", input, ".img", collapse = T))
test <- raster(paste("data/s", input, ".img", collapse = 0))
paste("data/s", input, ".img", collapse = 0)
paste("data/s", input, ".img", collapse = T)
paste("data/s", input, ".img", collapse = 1)
paste("data/s", input, ".img", collapse = "")
paste("data/s", input, ".img", collapse = ",")
paste0("data/s", input, ".img")
test <- raster(paste0("data/s", input, ".img"))
head(db)
db[db$Common.name == "white oak"]
db[db$Common.name == "white oak", ]
# Summary data
test <- white.oak
usa <- readOGR("data/shapefiles", "states") # get usa shapefile
white.oak <- raster("data/s802.img")
red.oak <- raster("data/s833.img")
usa <- spTransform(usa, CRS(proj4string(white.oak))) # transform shapefile to project with raster
contig.usa <- subset(usa, STATE_NAME != "Hawaii" & STATE_NAME != "Alaska") # contig. usa shapefile
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
library(ggthemes)
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
# Summary data
test <- white.oak
test[test == 0] <- NA # Converts 0 to NA
### Use cellStats to return a single value for analyzing raster data
# Depending on which version of the dataset I use, get different mean values...
cellStats(white.oak, stat = "mean")
cellStates(white.oak[white.oak != 0], stat = "mean")
cellStats(white.oak[white.oak != 0], stat = "mean")
?cellStats
cellStats(test, stat = "mean")
cell.Stats(test, stat="weighted.mean")
cellStats(test, stat="weighted.mean")
head(getValues(test))
cellStats white.oak, stat = "sum")
cellStats(white.oak, stat = "sum")
non.zero <- getValues(white.oak)
sum(non.zero > 0)
# Another attempt to get mean to match what it is in summary
sum <- cellStats(white.oak, stat = "sum")
sum/count
count <- sum(non.zero > 0)
sum/count
white.oak
cellStats(test, stat = "mean")
PlotUSA(white.oak)
wisconsin <- subset(usa, STATE_name == "Wisconsin")
wisconsin <- subset(usa, STATE_NAME == "Wisconsin")
plot(wisconsin)
plot(white.oak, add = T)
plot(wisconsin, add = T)
test <- mask(white.oak, wisconsin)
plot(test)
wisconsin
contig.usa
test
white.oak
test <- mask(crop(white.oak, extent(wisconsin)), wisconsin)
plot(test)
mn.wi <- subset(usa, STATE_NAME == "Wisconsin" | STATE_NAME = "Minnesota")
mn.wi <- subset(usa, STATE_NAME == "Wisconsin" | STATE_NAME == "Minnesota")
plot(wi.white.oak)
plot(mn.wi, add = T)
plot(wi.white.oak)
plot(wisconsin, add = T)
mn.wi.white.oak <- mask(crop(white.oak, extent(mn.wi)), mn.wi)
plot(wi.white.oak)
wi.white.oak <- mask(crop(white.oak, extent(wisconsin)), wisconsin)
plot(wi.white.oak)
plot(wisconsin, add = T)
mn.wi.white.oak <- mask(crop(white.oak, extent(mn.wi)), mn.wi)
plot(wi.white.oak)
plot(mn.wi, add = T)
plot(mn.wi.white.oak)
plot(mn.wi, add = T)
### Calculate mean BA by state and nationwide
avg.wi.white.oak <- cellStates(wi.white.oak, stat = "mean")
### Calculate mean BA by state and nationwide
avg.wi.white.oak <- cellStats(wi.white.oak, stat = "mean")
avg.wi.white.oak
### Calculate mean BA by state and nationwide
test <- wi.white.oak[wi.white.oak != 0]
avg.wi.white.oak <- cellStats(test, stat = "mean")
### Calculate mean BA by state and nationwide
test <- wi.white.oak
test[test == 0] <- NA
avg.wi.white.oak <- cellStats(test, stat = "mean")
avg.wi.white.oak
wi.white.oak
plot(wi.white.oak, pixels = 10000)
plot(wi.white.oak, maxpixels = 10000)
plot(wisconsin, add = T)
warnings()
plot(wi.white.oak, maxpixels = 10000)
plot(wisconsin, add = T)
plot(wi.white.oak, maxpixels = 1000)
plot(wisconsin, add = T)
plot(wi.white.oak, maxpixels = 10)
plot(wisconsin, add = T)
