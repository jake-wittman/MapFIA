}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s520.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Fraxinus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s540.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Gleditsia" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s550.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Halesia" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s580.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Juglans" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s600.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Magnolia" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s650.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Malus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s660.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Morus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s680.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Nyssa" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s690.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Populus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s740.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Prosopis" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s755.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Prunus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s760.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Quercus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s800.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Salix" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s920.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Tilia" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s950.img", overwrite = T, options = "COMPRESSED=YES")
# Start here
tree.id <- db$id[db$genus_name == "Ulmus" & db$spp_name != "spp." ]
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
rasters <- lapply(file.list[index], raster)
for (i in 1:length(rasters)) {
if (i == 1){
combined <- rasters[[i]]
} else {
combined <- combined + rasters[[i]]
}
}
beep(6)
plot(combined)
# CHECK THAT FILE NAME IS RIGHT!!!!!!!!!!!!!!!!!!!!!!!!!
# STOP AND CHECK RIGHT NOW!!!!!!!!!!!!!!!
writeRaster(combined, "data/s970.img", overwrite = T, options = "COMPRESSED=YES")
print(state.shapes[[i]])
library(raster)
library(rgdal)
library(ggplot2)
library(viridis)
library(rasterVis)
library(ggthemes)
PlotUSA <- function(raster) {
plot(raster)
plot(contig.usa, add = T)
}
usa <- readOGR("data/shapefiles", "states") # get usa shapefile
white.oak <- raster("data/s802.img")
red.oak <- raster("data/s833.img")
usa <- spTransform(usa, CRS(proj4string(white.oak))) # transform shapefile to project with raster
contig.usa <- subset(usa, STATE_NAME != "Hawaii" & STATE_NAME != "Alaska") # contig. usa shapefile
wisconsin <- subset(usa, STATE_NAME == "Wisconsin")
mn.wi <- subset(usa, STATE_NAME == "Wisconsin" | STATE_NAME == "Minnesota")
states <- unique(contig.usa$STATE_NAME)
arizona <- subset(contig.usa, STATE_NAME == "Arizona")
rm(combined)
### Total BA by state - will want to get a script running and let this calculate on its own
# then create a csv for it.
db <- read.csv("data/summary_table_all.csv")
db$id <- paste0("s", db$spp_code, ".img")
genera <- unique(db$genus_name)
id <- db$id
file.list <- list.files(path = "./data/", pattern = ".img", full.names = T)
# The combined spp files are not done yet, so remove them from file list
tree.id <- db$id
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
list.rasters <- lapply(file.list[index], raster)
# Make a list of state shape files
state.shapes <- lapply(states, function(x) {subset(contig.usa, STATE_NAME == x)})
names(state.shapes) <- states
for (i in state.shapes) {
print(state.shapes[[i]])
}
i = 1
state.shapes[[i]]
names(state.shapes[[i]])
values(state.shapes[[i]])
StateStats <- function(rasterfile) {
for (i in states) {
cellStats(mask(crop(rasterfile, extent(i)), i), stat = "sum")
}
}
StateStats(white.oak)
StateStats <- function(rasterfile) {
for (i in states) {
crop(rasterfile, extent(i)), i), stat = "sum")
}
}
StateStats <- function(rasterfile) {
for (i in states) {
crop(rasterfile, extent(i))
}
}
StateStats(white.oak)
StateStats <- function(rasterfile) {
for (i in states) {
cellStats(mask(crop(rasterfile, extent(state.shapes[paste(i)])), state.shapes[paste(i)]), stat = "sum")
}
}
StateStats(white.oak)
i <- states[1]
i
states <- as.character(unique(contig.usa$STATE_NAME))
i <- states[1]
i
state.shapes[paste(i)]
StateStats <- function(rasterfile) {
for (i in states) {
cellStats(mask(crop(rasterfile, extent(state.shapes[paste(i)])), state.shapes[paste(i)]), stat = "sum")
}
}
StateStates(white.oak)
StateStats(white.oak)
extent(state.shapes[paste(i)])
state.shapes[paste(i)]
test <- unlist(state.shapes)
test
test$i
test == i
test[test == i]
test[paste(i)]
test
state.shapes
str(state.shapes[paste(i)])
plot(state.shapes[paste(i)])
state.shapes
plot(wisconsin)
plot(state.shapes[i])
plot(state.shapes[[i])
plot(state.shapes[[i]])
StateStats <- function(rasterfile) {
for (i in states) {
cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])), state.shapes[[paste(i)]]), stat = "sum")
}
}
StateStats(white.oak)
?data.frame
test <- data.frame(x = states, y = NA )
test
test[i, ]
i
test[x = i,]
test[x == i,]
test$x
test <- data.frame(x = as.character(states), y = NA )
test$x
test$x <- as.character(test$x)
test$x
test[i]
test[i, ]
test[test$x == i, ]
test[test$x == i, y]
StateStats <- function(rasterfile) {
for (i in states) {
test[test$x == i, y] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])), state.shapes[[paste(i)]]), stat = "sum")
}
}
StateStats(white.oak)
test$y[test$x == i]
states <- c("Wisconsin", "Minnesota")
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])), state.shapes[[paste(i)]]), stat = "sum")
}
}
StateStats(white.oak)
test
StateStats <- function(rasterfile) {
for (i in states) {
print(cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])), state.shapes[[paste(i)]]), stat = "sum"))
}
}
StateStats(white.oak)
test <- data.frame(x = states, y = NULL )
states <- as.character(unique(contig.usa$STATE_NAME))
names(state.shapes) <- states
test <- data.frame(x = states, y = NULL )
test$y[test$x == i]
test$y[test$x == i] <- 15
test$y[test$x == i]
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
}
}
StateStats(white.oak)
print(i)
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
}
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
}
StateStats(white.oak)
test
states <- c("Maine", "Rhode Island")
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
}
StateStats(white.oak)
test
StateStats <- function(rasterfile) {
for (i in states) {
result <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
test$y[test$x == i] <- result
print(i)
}
}
StateStats(white.oak)
test
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
return(test)
}
}
test
StateStats(white.oak)
StateStats <- function(rasterfile) {
for (i in states) {
test$y[test$x == i] <- cellStats(mask(crop(rasterfile, extent(state.shapes[[paste(i)]])),
state.shapes[[paste(i)]]), stat = "sum")
print(i)
}
return(test)
}
StateStats(white.oak)
rasters <- rasters[1:2]
rasters
sum.ba <- data.frame(x = id, y = states, z = NA )
sum.ba$x <- as.character(sum.ba)
sum.ba <- data.frame(x = id, y = states, z = NA )
sum.ba$x <- as.character(sum.ba$x)
sum.ba
sum.ba <- data.frame(x = NA, y = states, z = NA )
sum.ba
sum.ba <- data.frame(x = tree.id, y = states, z = NA )
sum.ba
db$id
# The combined spp files are not done yet, so remove them from file list
tree.id <- db$spp_code
tree.id <- as.character(tree.id)
index <- grep(paste(tree.id, collapse = "|"), split1)
file.list[index]
spp_id <- rep(tree.id, length(states))
spp_id
state_df <- rep(states, length(tree.id))
state_df
cbind(spp_id, state_df)
?rep
?each
?seq
